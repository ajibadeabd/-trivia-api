{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "maintainance Tracking  App",
        "description": "A simple web app for that keep track on each user  maintainance request(approved, reject,pending and resolved",
        "license": {
            "name": "MIT"
        }
    },
    "basePath": "",
    "tags": [
        {
            "name": "maintainance-request-Tracker",
            "description": "For keeping track of maintainance request"
        }
    ],
    "schemes": [
       
        "https",
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "components":{
        "securitySchema":{
            "bearereAuth":{
                "type":"http",
                "scheme":"bearer",
                "bearerFormat": "JWT"
            }
        },
        "security":{
            "bearerAuth":[]
        }
    },
    "paths": {
        "/api/v1/user/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Users can create an account",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "To create an account",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "you are now logged in",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "400": {
                        "description": "password incorrect"
                    },
                    "400": {
                        "description": "Username already taken"                        
                    },
                    "400": {
                        "description": "email  already been registerd. did you forget your password"                        
                    }
                    
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                
                "summary": "Users can  login to access their created account, set token to header authorization to get access to other route",
               "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "To create an account, if the logged in userType is and admin he will be redirected to the admin dashboard like wise for the user, an access token is also created which last for 15 minute, a refresh token will also be created as well which will last for 2 week to fetch a new access token",
                    "schema": {
                        "$ref": "#/definitions/user"
                    }
                }
                ],
                "responses": {
                    "200": {
                        "description": "you are now logged in",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "404": {
                        "description": "no email found"
                    },
                    "400": {
                        "description": "incorrect password"                        
                    }
                    
                }
            }
        },
        "/Api/v1/quiz/get_quiz": {
            "get": {
                "tags": [
                    "question"
                ],
                
                "summary": "get ten random questions",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "To get a randon question"
                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "10 random question fetched"
                        
                    }
                   
                    
                }
            }
        },
        "/Api/v1/quiz/post_answer": {
            "post": {
                "tags": [
                    "question"
                ],
                "security":{
                    "bearerAuth":[]
                },
                "summary": "post all ten  by answer  by a logged in user",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "To create a request",
                        "schema": {
                            "$ref": "#/definitions/answer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "10 random question fetched"
                        
                    }
                    
                }
            }
        }
    },
    "definitions": {
        "user": {
            "type": "object",
            "properties": {
                "name": {
                    "type":"string",
                    "required":true,
                    " unique": true
                },
                "email": {
                    "type":"string",
                     "required":true,
                     "unique": true
                },
                "password": {
                    "type":"string",
                    "required":true
                },
                "con_password": {
                    "type":"string",
                    "require":true
                    
                }
                
                
            }
        }
        ,
            "answer": {
                "type": "object",
                "properties": {
                    "question1":{
                        "type":{
                            "id": "1",
                            "answer": "B"
                        },
                        "required":true
                    },
                    "question2":{
                        "type":{
                            "id": "40",
                            "answer": "B"
                        },
                        "required":true
                    },
                    "question3":{
                        "type":{
                            "id": "31",
                            "answer": "D"
                        },
                        "required":true
                    },
                    "question4":{
                        "type":{
                            "id": "33",
                            "answer": "B"
                        },
                        "required":true
                    },
                    "question5":{
                        "type":{
                            "id": "3",
                            "answer": "B"
                        },
                        "required":true
                    },
                    "question6":{
                        "type":{
                            "id": "17",
                            "answer": "B"
                        },
                        "required":true
                    },
                    "question7":{
                        "type":{
                            "id": "26",
                            "answer": "B"
                        },
                        "required":true
                    },
                    "question8":{
                        "type":{
                            "id": "12",
                            "answer": "B"
                        },
                        "required":true
                    },
                    "question9":{
                        "type":{
                            "id": "19",
                            "answer": "B"
                        },
                        "required":true
                    },
                    "question10":{
                        "type":{
                            "id": "27",
                            "answer": "B"
                        },
                        "required":true
                    }
                  
                }
            }
    }
}